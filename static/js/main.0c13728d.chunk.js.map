{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","cn","disabled","href","onClick","map","page","active","handleCurrentPageChange","length","items","App","useState","setPerPage","setCurrentPage","totalPages","firstItemIndex","lastItemIndex","visibleItems","slice","id","defaultValue","onChange","e","preventDefault","Number","target","value","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAGMC,EAAQX,EAAW,EADNY,KAAKC,KAAKN,EAAQC,IAqBrC,OACE,mCACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CACzBC,SAA0B,IAAhBP,IAFd,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAzBkB,WACN,IAAhBT,GACFC,EAAaD,EAAc,IAkBvB,oBAWDE,EAAMQ,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IAAG,YAAa,CACzBM,OAAQD,IAASX,IAHrB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAhDW,SAACE,GAC3BA,IAASX,GACXC,EAAaU,GA8CUE,CAAwBF,IAJzC,SAMGA,KAXEA,MAgBT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUP,IAAgBE,EAAMY,SAJtC,SAQE,mBACE,UAAQ,WACRT,UAAU,YACVG,KAAK,QACL,gBAAeR,IAAgBE,EAAMY,OACrCL,QAxDkB,WACtBT,IAAgBE,EAAMY,QACxBb,EAAaD,EAAc,IAiDvB,0BC7EJe,EAAQxB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBmB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBmB,EAApB,KACMC,EAAaL,EAAMD,OAEnBO,GAAkBrB,EAAc,GAAKD,EACrCuB,EAAgBD,EAAiBtB,EACjCwB,EAAeR,EAAMS,MAAMH,EAAgBC,GAQjD,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCqB,EAAiB,EADlD,cACyDD,EAAaE,EAAgBF,EAAaE,EADnG,eACuHF,EADvH,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,aAAc3B,EACd4B,SArBkB,SAACC,GAC3BA,EAAEC,iBACFX,EAAWY,OAAOF,EAAEG,OAAOC,QAC3Bb,EAAe,IAaT,SArBe,CAAC,EAAG,EAAG,GAAI,IA4BRT,KAAI,SAACuB,GAAD,OAClB,wBAAqBD,MAAOC,EAA5B,SAAqCA,GAAxBA,UAKnB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOsB,EACPrB,QAASA,EACTC,YAAaA,EACbC,aAAckB,IAEhB,6BACGI,EAAab,KAAI,SAACyB,GAAD,OAChB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC1DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0c13728d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\nexport interface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n\n  const handleCurrentPageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevPageClick = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (currentPage !== pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPageClick}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={cn('page-item', {\n              active: page === currentPage,\n            })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => handleCurrentPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={cn(\n            'page-item',\n            {\n              disabled: currentPage === pages.length,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pages.length}\n            onClick={handleNextPageClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const totalPages = items.length;\n  const perPageOptions = [3, 5, 10, 20];\n  const firstItemIndex = (currentPage - 1) * perPage;\n  const lastItemIndex = firstItemIndex + perPage;\n  const visibleItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    e.preventDefault();\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${totalPages < lastItemIndex ? totalPages : lastItemIndex} of ${totalPages})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={perPage}\n            onChange={handlePerPageChange}\n          >\n            {perPageOptions.map((option) => (\n              <option key={option} value={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalPages}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {visibleItems.map((item) => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}